import org.apache.tools.ant.filters.FixCrLfFilter

plugins {
    id "no.nils.wsdl2java" version "0.8"
    id "com.jfrog.artifactory" version "3.1.2"
    id "org.sonarqube" version "2.5"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'java-library-distribution'

repositories {
    maven { url 'http://10.31.1.105:8081/artifactory/libs-release' }
}

group = 'com.checkmarx'
version = '8.6.0' + "-" + getDate()
compileJava.options.encoding = 'UTF-8'
compileJava.sourceCompatibility = 7
compileJava.targetCompatibility = 7

jar.doFirst {
    manifest {
        attributes 'Implementation-Title': project.description,
                'Implementation-Version': project.version,
                'Implementation-URL': 'http://www.checkmarx.com',
                'Main-Class': 'com.checkmarx.cxconsole.CxConsoleLauncher',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')

        if (System.env.BUILD_NUMBER) {
            attributes 'Implementation-Build': System.env.BUILD_NUMBER
        }
        if (System.env.GIT_COMMIT) {
            attributes 'Repository-Version': System.env.GIT_COMMIT
        }
    }
}

tasks.withType(Tar) {
    enabled = false
    compression = Compression.GZIP
}

dependencies {
    compile 'commons-collections:commons-collections:3.2.2',
            'org.apache.commons:commons-lang3:3.4',
            'org.apache.logging.log4j:log4j-api:2.9.1',
            'org.apache.logging.log4j:log4j-core:2.9.1',
            'org.jdom:jdom:1.1.3',
            'com.checkmarx.components:zipper:1.+',
            'org.apache.cxf:cxf-rt-frontend-jaxws:3.1.9',
            'org.apache.cxf:cxf-rt-transports-http-jetty:3.1.9',
            'org.apache.httpcomponents:httpmime:4.4.1',
            'javax.ws.rs:javax.ws.rs-api:2.0.1',
            'com.fasterxml.jackson.core:jackson-databind:2.8.7',
            'commons-io:commons-io:2.5',
            'commons-cli:commons-cli:1.4',
            'org.apache.ant:ant:1.9.4'
}

wsdl2java {
    generatedWsdlDir = file("build/generated-sources")  // target directory for generated source code
    wsdlDir = file("src/main/config/com/checkmarx/cxcviewer/ws") // define to support incremental build
    wsdlsToGenerate = [
            [
                    '-mark-generated',
                    '-p',
                    'com.checkmarx.cxviewer.ws.resolver',
                    '-client',
                    'src/main/config/com/checkmarx/cxcviewer/ws/cxwsresolver.wsdl'
            ],
            [
                    '-mark-generated',
                    '-p',
                    'com.checkmarx.cxviewer.ws.generated',
                    '-client',
                    'src/main/config/com/checkmarx/cxcviewer/ws/CxCLIWebServiceV1.wsdl']
    ]
    cxfVersion = "3.1.1"
}

distributions {
    main {
        baseName = 'CxConsolePlugin'
        contents {
            from('src/main/scripts') {
                filter {
                    it.replaceAll('cx_console\\.jar', jar.archiveName)
                }
                filter(FixCrLfFilter.class,
                        eol: FixCrLfFilter.CrLf.newInstance("lf"))
            }
            from('src/main') {
                include 'config/krb5.conf'
            }
            from('src/main/resources') {
                include 'cx_console.properties'
                filter {
                    it.replaceAll('\\$\\{pom\\.version}', version)
                }
                into 'config'
            }
            from('src/main/resources') {
                include 'log4j.properties'
            }
        }
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HHmm')
    return formattedDate
}
